# Default values for iceci.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

iceciOperator:
  enabled: true
  replicaCount: 1
  image:
    repository: docker.io/iceci/iceci-operator
    pullPolicy: IfNotPresent

  persistence:
    sharedVolume:
      annotations: {}
      storageClass: "-"
      size: 1Gi

      ## A manually managed Persistent Volume Claim
      ## If defined, PVC must be created manually before volume will be bound
      ##
      # existingClaim:

      hostPath: /iceci/shared-storage

    dynamicVolume:
      annotations: {}
      storageClass: "-"
      size: 1Gi

      ## A manually managed Persistent Volume Claim
      ## If defined, PVC must be created manually before volume will be bound
      ##
      # existingClaim:

      hostPath: /iceci/dynamic-storage
ui:
  enabled: true
  replicaCount: 1
  image:
    repository: docker.io/iceci/iceci-ui
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: charts.example
        paths: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
api:
  enabled: true
  replicaCount: 1
  image:
    repository: docker.io/iceci/iceci-api
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: charts.example
        paths: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

sync:
  enabled: true
  replicaCount: 1
  image:
    repository: docker.io/iceci/iceci-sync
    pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Configuration values for the postgresql dependency.
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
##
postgresql:

  ### Install PostgreSQL dependency
  ##
  install: true

  ### PostgreSQL User to create.
  ##
  postgresqlUsername: user

  ## PostgreSQL Password for the new user.
  ## If not set, a random 10 characters password will be used.
  ##
  postgresqlPassword: pass

  ## PostgreSQL Database to create.
  ##
  postgresqlDatabase: iceci

  ## Persistent Volume Storage configuration.
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  ##
  persistence:
    ## Enable PostgreSQL persistence using Persistent Volume Claims.
    ##
    enabled: true

database:
  dbName: iceci
  user: user
  password: pass
  # host:
  port: 5432
  type: postgres
